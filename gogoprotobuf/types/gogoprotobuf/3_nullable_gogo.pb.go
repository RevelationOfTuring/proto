// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: 3_nullable_gogo.proto

package gogoprotobuf

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Test3 struct {
	T                    Test3_1  `protobuf:"bytes,1,opt,name=t,proto3" json:"t"`
	Num                  float64  `protobuf:"fixed64,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test3) Reset()         { *m = Test3{} }
func (m *Test3) String() string { return proto.CompactTextString(m) }
func (*Test3) ProtoMessage()    {}
func (*Test3) Descriptor() ([]byte, []int) {
	return fileDescriptor_ceb64150831a1dda, []int{0}
}
func (m *Test3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test3.Unmarshal(m, b)
}
func (m *Test3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test3.Marshal(b, m, deterministic)
}
func (m *Test3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test3.Merge(m, src)
}
func (m *Test3) XXX_Size() int {
	return xxx_messageInfo_Test3.Size(m)
}
func (m *Test3) XXX_DiscardUnknown() {
	xxx_messageInfo_Test3.DiscardUnknown(m)
}

var xxx_messageInfo_Test3 proto.InternalMessageInfo

func (m *Test3) GetT() Test3_1 {
	if m != nil {
		return m.T
	}
	return Test3_1{}
}

func (m *Test3) GetNum() float64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type Test3_1 struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test3_1) Reset()         { *m = Test3_1{} }
func (m *Test3_1) String() string { return proto.CompactTextString(m) }
func (*Test3_1) ProtoMessage()    {}
func (*Test3_1) Descriptor() ([]byte, []int) {
	return fileDescriptor_ceb64150831a1dda, []int{1}
}
func (m *Test3_1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test3_1.Unmarshal(m, b)
}
func (m *Test3_1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test3_1.Marshal(b, m, deterministic)
}
func (m *Test3_1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test3_1.Merge(m, src)
}
func (m *Test3_1) XXX_Size() int {
	return xxx_messageInfo_Test3_1.Size(m)
}
func (m *Test3_1) XXX_DiscardUnknown() {
	xxx_messageInfo_Test3_1.DiscardUnknown(m)
}

var xxx_messageInfo_Test3_1 proto.InternalMessageInfo

func (m *Test3_1) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Test3)(nil), "types.Test3")
	proto.RegisterType((*Test3_1)(nil), "types.Test3_1")
}

func init() { proto.RegisterFile("3_nullable_gogo.proto", fileDescriptor_ceb64150831a1dda) }

var fileDescriptor_ceb64150831a1dda = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x35, 0x8e, 0xcf, 0x2b,
	0xcd, 0xc9, 0x49, 0x4c, 0xca, 0x49, 0x8d, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x2d, 0xa9, 0x2c, 0x48, 0x2d, 0x96, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d,
	0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x07, 0xc9, 0xea, 0x83, 0x65, 0x93, 0x4a, 0xd3, 0xc0, 0x3c, 0x30,
	0x47, 0x1f, 0xa1, 0x4b, 0xc9, 0x96, 0x8b, 0x35, 0x24, 0xb5, 0xb8, 0xc4, 0x58, 0x48, 0x89, 0x8b,
	0xb1, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0xdb, 0x88, 0x4f, 0x0f, 0x6c, 0x94, 0x1e, 0x58, 0x22,
	0xde, 0xd0, 0x89, 0xe5, 0xc4, 0x3d, 0x79, 0x86, 0x20, 0xc6, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xbc,
	0xd2, 0x5c, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xc6, 0x20, 0x10, 0x53, 0x49, 0x9a, 0x8b, 0x1d, 0xaa,
	0x0a, 0x24, 0x99, 0x5b, 0x9c, 0x0e, 0x36, 0x82, 0x33, 0x08, 0xc4, 0x74, 0x12, 0x8c, 0xe2, 0xd7,
	0xd3, 0xb7, 0x86, 0x5b, 0x9b, 0x54, 0x9a, 0x96, 0xc4, 0x06, 0x66, 0x19, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xcf, 0xf5, 0xa2, 0xbe, 0xc4, 0x00, 0x00, 0x00,
}
